name: Backend Continuous Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'starter/backend/**'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install Pipenv
        run: pip install pipenv
      - name: Install dependencies
        run: |
          cd starter/backend
          pipenv install --dev
      - name: Run lint
        run: |
          cd starter/backend
          pipenv run pylint movies/movies_api.py

  test:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install Pipenv
        run: pip install pipenv
      - name: Install dependencies
        run: |
          cd starter/backend
          pipenv install --dev
      - name: Run tests
        run: |
          cd starter/backend
          pipenv run pytest

  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build and tag Docker image
        run: |
          cd starter/backend
          docker build -t 333452229479.dkr.ecr.us-east-1.amazonaws.com/backend:${{ github.sha }} .
      - name: Push Docker image to Amazon ECR
        run: |
          docker push 333452229479.dkr.ecr.us-east-1.amazonaws.com/backend:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region us-east-1 --name cluster

      - name: Test Kubernetes connection
        run: |
          kubectl get nodes

      - name: Update Kubernetes manifests with kustomize
        run: |
          cd starter/backend/k8s
          kustomize edit set image backend=333452229479.dkr.ecr.us-east-1.amazonaws.com/backend:${{ github.sha }}

      - name: Deploy to Kubernetes
        run: |
          cd starter/backend/k8s
          kustomize build | kubectl apply --validate=false -f -

      - name: Print EKS Services
        run: |
          echo "Services in EKS cluster:"
          kubectl get svc -A