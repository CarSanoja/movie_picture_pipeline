name: Frontend Continuous Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          cd starter/frontend
          npm ci

      - name: Run ESLint
        run: |
          cd starter/frontend
          npm run lint

  test:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          cd starter/frontend
          npm ci

      - name: Run tests
        env:
          CI: true
        run: |
          cd starter/frontend
          npm test

  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_REGION: us-east-1
          # Access keys must come from GitHub Secrets
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build and tag Docker image
        run: |
          cd starter/frontend
          docker build \
            --build-arg REACT_APP_MOVIE_API_URL=https://api.example.com \
            -t 333452229479.dkr.ecr.us-east-1.amazonaws.com/frontend:${{ github.sha }} .

      - name: Push Docker image to Amazon ECR
        run: |
          docker push 333452229479.dkr.ecr.us-east-1.amazonaws.com/frontend:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region us-east-1 --name cluster

      - name: Test Kubernetes connection
        run: |
          kubectl get nodes

      - name: Update Kubernetes manifests with kustomize
        run: |
          cd starter/frontend/k8s
          kustomize edit set image frontend=333452229479.dkr.ecr.us-east-1.amazonaws.com/frontend:${{ github.sha }}

      - name: Deploy to Kubernetes
        run: |
          cd starter/frontend/k8s
          kustomize build | kubectl apply --validate=false -f -
